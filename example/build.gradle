plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'maven-publish'
}
group = 'com.github.Akankshaa-17'

afterEvaluate{
    publishing {
        publications {
            release(MavenPublication) {
                from components.findByName('release')
                groupId = 'com.app.instagramlikeimagevideopicker'
                artifactId = 'instagramlikeimagevideopicker'
                version = '1.6'
            }
        }
        repositories {
            maven {
                name = 'instagramlikeimagevideopicker'
                url = "${project.buildDir}/instagramlikeimagevideopicker"
            }
        }
    }
}

android {
    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }

    namespace = 'com.app.instagramlikeimagevideopicker'

    compileSdk versionCompileSdk
    defaultConfig {
        applicationId "com.app.instagramlikeimagevideopicker"
        minSdkVersion versionMinSdk
        targetSdkVersion versionTargetSdk
        versionCode 1
        versionName "1.6"
        aarMetadata {
            minCompileSdk = versionMinSdk
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation project(path: ':mediapickerlib')
}

tasks.register('generateRepo', Zip) {
    def publishTask = tasks.named('instagramlikeimagevideopicker')
    from publishTask.map { it.getRepository().getUrl() }
    into 'instagramlikeimagevideopicker'
    archiveFileName.set('instagramlikeimagevideopicker.zip')
}
